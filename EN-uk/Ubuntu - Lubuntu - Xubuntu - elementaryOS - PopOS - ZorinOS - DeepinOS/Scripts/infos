#!/bin/sh

# Onglet d'aide.
if [ $1 = "-h" 2>/dev/null ] || [ $1 = "--help" 2>/dev/null ]
then
	echo "\e[32m\e[1m*********************\e[0m"
	echo "\e[32m\e[1m*    INFORMATION    *\e[0m"
	echo "\e[32m\e[1m*********************\e[0m"
	echo ""
	echo "\e[32m\e[1mLanguage:\e[0m    EN-uk"
	echo "\e[32m\e[1mScript name:\e[0m Infos"
	echo "\e[32m\e[1mCommand:\e[0m     infos"
	echo "\e[32m\e[1mAuthor:\e[0m      Kalvez"
	echo "\e[32m\e[1mLocation:\e[0m    /usr/bin/"
	echo "\e[32m\e[1mVersion:\e[0m     3.2.1.20200523"
	echo ""
	echo "\e[32m\e[1m****************\e[0m"
	echo "\e[32m\e[1m*    DETAIL    *\e[0m"
	echo "\e[32m\e[1m****************\e[0m"
	echo ""
	echo "You must execute the script with root permissions."
	echo ""
	echo "This script displays a lot of information about the operating system, but also about the specs of the computer and some other pactical data"
	echo ""
	exit 0
fi

# Vérification des privilèges root de l'utilisateur.
if [ "$(id -u)" != "0" ]
then
	echo "\e[31m\e[1mThis script must be executed with root privileges.\e[0m" 1>&2
	echo ""
	exit 1
fi

# Fonction conversion de la RAM en MiB.
converterMiB()
{
	mib=1048.576
	memory=0
	memory=$1
	memory=$(echo "$memory/$mib" |bc)
	echo "$memory"
}

# Mise à zéro des arguments.
version=0
distributor_id=0
description=0
release=0
codename=0
os_type=0
architecture=0
device_name=0
users=0
uptime=0
kernel_info=0
system_manufacturer=0
system_model=0
device_type=0
screen_resolution=0
cpu_model=0
total_ram=0
available_ram=0
total_swap=0
cached_swap=0
root_part_available=0
root_part_total=0
home_part_available=0
home_part_total=0
baseboard=0
baseboard_version=0
baseboard_serial=0
bios_version=0
bios_date=0
serial=0
gpu_vendor=0

# Déclaration des arguments.
version=$(lsb_release -a | grep 'LSB Version' | awk '{$1=$2=""; print $0}')
distributor_id=$(lsb_release -a | grep 'Distributor ID' | awk '{$1=$2=""; print $0}')
description=$(lsb_release -a | grep Description | awk '{$1=""; print $0}')
release=$(lsb_release -a | grep Release | awk '{$1=""; print $0}')
codename=$(lsb_release -a | grep Codename | awk '{$1=""; print $0}')
os_type=$(uname -o)
architecture=$(uname -i)
device_name=$(uname -n)
users=$(users)
uptime=$(uptime)
kernel_info=$(uname -srv)
system_manufacturer=$(dmidecode -s system-manufacturer)
system_model=$(dmidecode -s system-product-name)
device_type=$(dmidecode -s chassis-type)
screen_resolution=$(xdpyinfo | grep dimensions | awk '{print $2}')
cpu_model=$(dmidecode -s processor-version | uniq)
total_ram=$(grep -Eom1 '[0-9]{1,9}' /proc/meminfo | tail -1	)
total_ram=$(converterMiB $total_ram)
available_ram=$(grep -Eom3 '[0-9]{1,9}' /proc/meminfo | tail -1)
available_ram=$(converterMiB $available_ram)
total_swap=$(grep -Eom15 '[0-9]{1,9}' /proc/meminfo | tail -1)
total_swap=$(converterMiB $total_swap)
cached_swap=$(grep -Eom6 '[0-9]{1,9}' /proc/meminfo | tail -1)
cached_swap=$(converterMiB $cached_swap)
root_part_available=$(df -Ph / | tail -1 | awk '{print $4}')
root_part_total=$(df -Ph / | tail -1 | awk '{print $2}')
home_part_available=$(df -Ph . | tail -1 | awk '{print $4}')
home_part_total=$(df -Ph . | tail -1 | awk '{print $2}')
baseboard=$(dmidecode -s baseboard-product-name)
baseboard_version=$(dmidecode -s baseboard-version)
baseboard_serial=$(dmidecode -s baseboard-serial-number)
bios_version=$(dmidecode -s bios-version)
bios_date=$(dmidecode -s bios-release-date)
serial=$(dmidecode -s system-serial-number)
gpu_vendor=$(lspci | grep VGA | awk '{print $5}' | tail -1)

# Vérification du modèle de GPU.
if [ $gpu_vendor = NVIDIA ]
then
  gpu_vendor=0
  gpu_vendor=$(lspci | grep VGA | awk '{print $5, $7, $8, $9, $10, $11}')
elif [ $gpu_vendor = Intel ]
then
  gpu_vendor=0
  gpu_vendor=$(lspci | grep VGA | awk '{print $5, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16}')
elif [ $gpu_vendor = Advanced ]
then
  gpu_vendor=0
  gpu_vendor=$(lspci | grep VGA | awk '{print $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19}')
else
  gpu_vendor=0
  gpu_vendor=Unknown
fi

# Affichage des infos.
echo "\e[32m\e[1m******************************\e[0m"
echo "\e[32m\e[1m*    SOFTWARE INFORMATION    *\e[0m"
echo "\e[32m\e[1m******************************\e[0m"
# Informations LSB
echo "\e[32m\e[1mLSB Version:\e[0m  $version"
echo "\e[32m\e[1mDistro. ID:\e[0m   $distributor_id"
echo "\e[32m\e[1mDescription:\e[0m   $description"
echo "\e[32m\e[1mRelease:\e[0m       $release"
echo "\e[32m\e[1mCodename:\e[0m      $codename"
echo "\e[32m\e[1mOS Type:\e[0m        $os_type"
echo "\e[32m\e[1mArchitecture:\e[0m   $architecture"
echo "\e[32m\e[1mDevice Name:\e[0m    $device_name"
echo "\e[32m\e[1mUser(s):\e[0m        $users"
echo "\e[32m\e[1mUptime:\e[0m        $uptime"
echo "\e[32m\e[1mKernel Version:\e[0m	$kernel_info"
echo ""
echo "\e[32m\e[1m****************************\e[0m"
echo "\e[32m\e[1m*    DEVICE INFORMATION    *\e[0m"
echo "\e[32m\e[1m****************************\e[0m"
echo "\e[32m\e[1mManufacturer:\e[0m   $system_manufacturer"
echo "\e[32m\e[1mModel:\e[0m          $system_model"
echo "\e[32m\e[1mDevice Type:\e[0m    $device_type"
echo "\e[32m\e[1mScreen Res.:\e[0m    $screen_resolution"
echo "\e[32m\e[1mProcessor:\e[0m      $cpu_model"
echo "\e[32m\e[1mGraphics:\e[0m       $gpu_vendor"
echo "\e[32m\e[1mFree Memory:\e[0m    $available_ram MiB / $total_ram MiB"
echo "\e[32m\e[1mCached Swap:\e[0m    $cached_swap MiB / $total_swap MiB"
echo "\e[32m\e[1mRoot Partition:\e[0m $root_part_available"B" / $root_part_total"B" Available"
echo "\e[32m\e[1mHome Partition:\e[0m $home_part_available"B" / $home_part_total"B" Available"
echo "\e[32m\e[1mBaseboard:\e[0m      $baseboard | $baseboard_version"
echo "\e[32m\e[1mBaseboard S/N:\e[0m  $baseboard_serial"
echo "\e[32m\e[1mBIOS Version:\e[0m   $bios_version | $bios_date"
echo "\e[32m\e[1mDevice S/N:\e[0m     $serial"
echo ""
